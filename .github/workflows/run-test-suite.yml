name: Run test suite

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Ninja
      run: choco install ninja --confirm

    - name: Install Visual Studio 2022 Build Tools
      uses: TheMrMilchmann/setup-msvc-dev@v3
      with: 
        arch: x64

    - name: Run build script
      run: |
        .github/scripts/build-windows.ps1

    - name: Run tests
      run: |
        cd out/build/x64-debug
        ninja
        cd loc.tests
        ./loc.tests

  build-linux:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install build tools
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake ninja-build

    - name: Run build script
      run: |
        chmod +x .github/scripts/build-linux.sh
        .github/scripts/build-linux.sh

    - name: Run tests
      run: |
        cd out/build/linux-debug/loc.tests
        ./loc.tests

  build-macos:
    runs-on: macos-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install build tools
      run: |
        brew update
        brew install cmake ninja gcc

    - name: Configure Environment for GCC
      run: |
        echo 'export CC=gcc-$(brew list gcc | grep gcc | sed "s/.*gcc-\([0-9]*\)$/\1/")' >> $GITHUB_ENV
        echo 'export CXX=g++-$(brew list gcc | grep g++ | sed "s/.*g++-\([0-9]*\)$/\1/")' >> $GITHUB_ENV


    - name: Run build script
      run: |
        chmod +x .github/scripts/build-macos.sh
        .github/scripts/build-macos.sh

    - name: Run tests
      run: |
        cd out/build/macos-debug/loc.tests
        ./loc.tests
